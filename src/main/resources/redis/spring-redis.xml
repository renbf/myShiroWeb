<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
    		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"
	default-lazy-init="false">
		
	 <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		 <property name="maxIdle" value="${redis.maxIdle}" /><!-- 最大闲置 -->
		 <property name="minIdle" value="${redis.minIdle}"/><!-- 最小闲置 -->
        <property name="maxWaitMillis" value="${redis.maxWait}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" /><!-- 可以获取 -->
    </bean>
	<!-- redis 配置,也可以把配置挪到properties配置文件中,再读取 -->
	<!-- <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		端口，默认6379
	    <constructor-arg index="2" value="6379"  name="port" type="int"/>
	    <constructor-arg index="3" value="5000"  name="timeout" type="int"/>
	    <constructor-arg index="1" value="127.0.0.1" name="host" type="java.lang.String"/>
	    如果你需要配置密码，请打开这里。
	    <constructor-arg index="4" value="你的密码" name="password" type="java.lang.String"/>
	   
	</bean> -->
	<!-- redis服务器中心 -->
    <bean id="connectionFactory"
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="poolConfig" ref="jedisPoolConfig" />
        <property name="port" value="${redis.port}" />
        <property name="hostName" value="${redis.host}" />
        <property name="password" value="${redis.password}" />
        <property name="timeout" value="${redis.timeout}"></property>
    </bean>
    <bean id="jdkSerializationRedisSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="keySerializer" ref="stringRedisSerializer" />
        <property name="valueSerializer" ref="jdkSerializationRedisSerializer" />
    </bean>

	<!-- <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				这里可以配置多个redis
				<bean class="com.yl.shiro.cache.SpringRedisCache">
					<property name="redisTemplate" ref="redisTemplate" />
					<property name="jdkSerializationRedisSerializer" ref="jdkSerializationRedisSerializer" />
					<property name="name" value="content" />
					name对应的名称要在类或方法的注解中使用
				</bean>
			</set>
		</property>
	</bean> -->
	<!-- spring cache -->
	<!-- <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
	<constructor-arg ref="redisTemplate"></constructor-arg>
	默认缓存十分钟
	<property name="defaultExpiration" value="10" />
	</bean> -->

    <bean id="redisUtil" class="com.yl.redis.RedisUtil">
        <property name="redisTemplate" ref="redisTemplate" />
    </bean>
    
    
</beans>